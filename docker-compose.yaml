# Diese Docker-Compose-Datei startet den Jenkins Master,
# einen dedizierten Jenkins Agent und bindet alle
# notwendigen Volumes an.
version: '3.8'

services:
  # Der Jenkins Master-Service
  jenkins-master:
    # Nutzt das in diesem Verzeichnis erstellte Dockerfile.
    build:
      context: .
      dockerfile: Dockerfile
    container_name: jenkins
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      # Hier werden die Jenkins-Daten persistent gespeichert.
      - jenkins-data:/var/jenkins_home
      # Mountet den Docker-Socket des Hosts.
      # Der Master benötigt diesen Socket NICHT mehr direkt, aber
      # das ist eine gängige Praxis, falls du ihn doch mal brauchst.
      - /var/run/docker.sock:/var/run/docker.sock
      # Mountet die Kubernetes-Konfiguration.
      - type: bind
        source: C:/Users/49160/.kube
        target: /var/jenkins_home/.kube
    # Startet den Container automatisch neu, falls er abstürzt.
    restart: unless-stopped
    environment:
      # Diese Umgebungsvariable teilt dem Jenkins Master die Adresse des Docker-Host mit.
      DOCKER_HOST: tcp://docker:2375

  # Der Jenkins Agent-Service
  jenkins-agent:
    # Nutzt ein dediziertes Agent-Image mit JDK, Git, Docker-CLI und kubectl.
    image: "jenkins/agent:latest"
    container_name: jenkins-agent
    volumes:
      # Mountet den Docker-Socket des Hosts, damit der Agent direkt auf den
      # Docker-Daemon zugreifen kann. Das ist der entscheidende Punkt.
      - /var/run/docker.sock:/var/run/docker.sock
      # Mountet das Workspace-Verzeichnis, damit der Agent Zugriff auf den Code hat.
      - jenkins-data:/home/jenkins/workspace
      # Mountet die Kubernetes-Konfiguration.
      - type: bind
        source: C:/Users/49160/.kube
        target: /home/jenkins/.kube
    # Verbindet den Agenten mit dem Master-Container.
    depends_on:
      - jenkins-master
    # Startet den Container automatisch neu, falls er abstürzt.
    restart: unless-stopped
    # Fügt einen einfachen Befehl hinzu, der den Container am Laufen hält, bis er sich verbindet.
    entrypoint: sleep infinity

# Definiert die Volumes, die für die Persistenz der Daten verwendet werden.
volumes:
  jenkins-data:
